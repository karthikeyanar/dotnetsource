@{
	var _PageHeaderModel = new dotnetsource.Models.PageHeaderModel { Title = "Form Examples" };
	var _BreadCrumbModel = new dotnetsource.Models.BreadCrumbModel {
		FirstUrl = "/Home/Index", FirstUrlName = "Home",
		SecondUrl = "/Home/FormExamples", SecondUrlName = "Forms",
		ThirdUrl = "/Home/FormExamples", ThirdUrlName = "Form Examples"
	};
	ViewBag.Title = _PageHeaderModel.Title;
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_PageHeader", _PageHeaderModel)
@Html.Partial("_BreadCrumb", _BreadCrumbModel)
<div class="row">
	<div class="col-md-12">
		<div class="panel panel-dark-blue">
			<div class="panel-heading">
				<h3 class="panel-title">
					Form Examples</h3>@Html.Partial("_PanelCloseTools")
			</div>
			<div class="panel-body">
				<h4>
					Inline Form</h4>
				<div class="notes notes-primary">
					<p>
						Add <code>.form-inline</code> to your <code>&lt;form&gt;</code> for left-aligned and inline-block controls. <strong>This only applies to forms within viewports that are at least 768px wide.</strong></p>
					<p>
						Read more about it on <a href="http://getbootstrap.com/css/#forms-inline" target="_blank">Bootstrap Inline Form website</a>.</p>
				</div>
				<h4>
					Horizontal Form</h4>
				<div class="notes notes-primary">
					<p>
						Use Bootstrap's predefined grid classes to align labels and groups of form controls in a horizontal layout by adding <code>.form-horizontal</code> to the form. Doing so changes <code>.form-group</code>s to behave as grid rows, so no need for <code>.row</code>.</p>
					<p>
						Read more about it on <a href="http://getbootstrap.com/css/#forms-horizontal" target="_blank">Bootstrap Horizontal Form website</a>.</p>
				</div>
			</div>
		</div>
	</div>
</div>
